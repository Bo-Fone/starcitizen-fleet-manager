parameters:
    env(REDIS_HOST): 'localhost'
    env(REDIS_PORT): '6379'
    env(REDIS_PASSWORD): ''
    locale: 'en'
    hwi_oauth.authentication.entry_point.oauth.class: 'App\Security\OAuthEntryPoint'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $profileLinkAccountLogger: '@monolog.logger.profile_link_account'
            $registrationFromAddress: 'noreply@fleet-manager.space'

    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Kernel.php}'

    App\Controller\:
        resource: '../src/Controller/*/*'
        tags: ['controller.service_arguments']

    redis:
        class: Redis
        calls:
            - [connect, ['%env(REDIS_HOST)%', '%env(REDIS_PORT)%']]
            - [auth, ['%env(REDIS_PASSWORD)%']]

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments: ['@redis']

    Doctrine\Common\Cache\RedisCache:
        calls:
            - [setRedis, ['@redis']]

    App\Service\Ship\InfosProvider\ShipInfosProviderInterface: '@App\Service\Ship\InfosProvider\ApiShipInfosProvider'
    App\Service\Ship\InfosProvider\ApiShipInfosProvider:
        arguments: { '$cache': '@rsi.ships.cache' }

    App\Service\Organization\InfosProvider\OrganizationInfosProviderInterface: '@App\Service\Organization\InfosProvider\ApiOrganizationInfosProvider'
    App\Service\Organization\InfosProvider\ApiOrganizationInfosProvider:
        arguments: { '$cache': '@rsi.organizations.cache' }

    App\Service\Organization\MembersInfosProvider\OrganizationMembersInfosProviderInterface: '@App\Service\Organization\MembersInfosProvider\ApiOrganizationMembersInfosProvider'
    App\Service\Organization\MembersInfosProvider\ApiOrganizationMembersInfosProvider:
        arguments: { '$cache': '@rsi.organizations_members.cache' }

    App\Service\Citizen\InfosProvider\CitizenInfosProviderInterface: '@App\Service\Citizen\InfosProvider\ApiCitizenInfosProvider'
    App\Service\Citizen\InfosProvider\ApiCitizenInfosProvider:
        arguments: { '$cache': '@rsi.citizens.cache' }

    App\Listener\TrackConnectionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.controller', method: 'onController' }

    App\Listener\UpdateCitizenLastFleetListener:
        tags:
            - { name: 'doctrine.event_listener', event: 'prePersist', method: 'prePersist' }
