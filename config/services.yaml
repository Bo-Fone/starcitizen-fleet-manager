# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'
    env(REDIS_HOST): 'localhost'
    env(REDIS_PORT): 6379

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\Infrastructure\:
        resource: '../src/Infrastructure/*'
        exclude: '../src/Infrastructure/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    redis:
        class: Redis
        calls:
        - [connect, ['%env(REDIS_HOST)%', '%env(REDIS_PORT)%']]

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments: ['@redis']

    Doctrine\Common\Cache\RedisCache:
        calls:
            - [setRedis, ['@redis']]

    App\Domain\FleetUploadHandler: ~
    App\Domain\FleetUploadHandlerInterface: '@App\Domain\FleetUploadHandler'
    App\Domain\OrganisationFleetGenerator: ~
    App\Domain\OrganisationFleetGeneratorInterface: '@App\Domain\OrganisationFleetGenerator'
    App\Domain\FleetRepositoryInterface: '@App\Infrastructure\Repository\FleetRepository'
    App\Domain\CitizenRepositoryInterface: '@App\Infrastructure\Repository\CitizenRepository'
    App\Domain\CitizenInfosProviderInterface: '@App\Infrastructure\Service\ApiCitizenInfosProvider'
